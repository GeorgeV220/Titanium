From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: George V <georgev22.github@gmail.com>
Date: Thu, 25 May 2023 13:48:33 +0300
Subject: [PATCH] feat: Add PlayerSettingsEvent to handle player client
 settings changes


diff --git a/src/main/java/net/titanium/event/player/PlayerSettingsEvent.java b/src/main/java/net/titanium/event/player/PlayerSettingsEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..51c775fb67bfedd86a9177e5916403009f432788
--- /dev/null
+++ b/src/main/java/net/titanium/event/player/PlayerSettingsEvent.java
@@ -0,0 +1,97 @@
+package net.titanium.event.player;
+
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerEvent;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * Called when the player changes their client settings
+ */
+public class PlayerSettingsEvent extends PlayerEvent implements Cancellable {
+
+    private static final HandlerList handlers = new HandlerList();
+
+    private boolean cancelled;
+
+    private final String locale;
+    private final int chatVisibility;
+    private final boolean chatColors;
+    private final byte skinParts;
+
+    public PlayerSettingsEvent(Player who,
+                               @NotNull String locale,
+                               int chatVisibility,
+                               boolean chatColors,
+                               byte skinParts) {
+        super(who);
+        this.locale = locale;
+        this.chatVisibility = chatVisibility;
+        this.chatColors = chatColors;
+        this.skinParts = skinParts;
+    }
+
+    public String getLocale() {
+        return locale;
+    }
+
+    public int getChatVisibility() {
+        return chatVisibility;
+    }
+
+    public byte getSkinParts() {
+        return skinParts;
+    }
+
+    public boolean hasChatColorsEnabled() {
+        return chatColors;
+    }
+
+    public boolean hasChatColorsEnabledChanged() {
+        return player.titanium().hasChatColorsEnabled() != chatColors;
+    }
+
+    public boolean hasChatVisibilityChanged() {
+        return player.titanium().getChatVisibility() != chatVisibility;
+    }
+
+    public boolean hasLocaleChanged() {
+        return !player.spigot().getLocale().equals(locale);
+    }
+
+    public boolean hasSkinPartsChanged() {
+        return this.player.titanium().getSkinParts() != this.skinParts;
+    }
+
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+    /**
+     * Gets the cancellation state of this event. A cancelled event will not
+     * be executed in the server, but will still pass to other plugins
+     *
+     * @return true if this event is cancelled
+     */
+    @Override
+    public boolean isCancelled() {
+        return this.cancelled;
+    }
+
+    /**
+     * Sets the cancellation state of this event. A cancelled event will not
+     * be executed in the server, but will still pass to other plugins.
+     *
+     * @param cancel true if you wish to cancel this event
+     */
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.cancelled = true;
+    }
+}
